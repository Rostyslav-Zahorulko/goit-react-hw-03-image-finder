{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/image-finder-api.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","url","src","alt","ImageGallery","images","map","id","webformatURL","Button","onClick","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOnBackdropClick","target","window","addEventListener","removeEventListener","createPortal","width","imageFinderApi","fetchImages","searchQuery","currentPage","perPage","axios","get","then","data","hits","App","isLoading","error","showModal","bigImageUrl","onChangeQuery","options","prevState","catch","finally","handleOnImageClick","nodeName","clickedImage","find","image","largeImageURL","toggleModal","console","log","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderLoadMoreButton","length","color","height","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c10f978.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nimport './Searchbar.scss';\r\n\r\nclass Searchbar extends Component {\r\n  state = { query: '' };\r\n\r\n  handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { query } = this.state;\r\n\r\n    if (query !== '') {\r\n      this.props.onSubmit(query);\r\n\r\n      this.setState({ query: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={query}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import './ImageGalleryItem.scss';\r\n\r\nconst ImageGalleryItem = ({ url }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img src={url} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nimport './ImageGallery.scss';\r\n\r\nconst ImageGallery = ({ images }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ id, webformatURL }) => (\r\n      <ImageGalleryItem key={id} url={webformatURL} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import './Button.scss';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    // console.log('Modal componentDidMount');\r\n\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // console.log('Modal componentWillUnmount');\r\n\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      // console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOnBackdropClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      // console.log('Кликнули в бэкдроп, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleOnBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.url} alt=\"\" width=\"1000\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import axios from 'axios';\r\n\r\n// axios.defaults.headers.common['Authorization'] =\r\n//   'Bearer 19734316-10978fed4d6ca650a445cb4b9';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1, perPage = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=19734316-10978fed4d6ca650a445cb4b9&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n    )\r\n    .then(({ data }) => data.hits);\r\n};\r\n\r\nconst imageFinderApi = { fetchImages };\r\n\r\nexport default imageFinderApi;\r\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nimport imageFinderApi from './services/image-finder-api';\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    bigImageUrl: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('click', this.handleOnImageClick);\n    console.log('Зарегистрировали обработчик клика');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.handleOnImageClick);\n    console.log('Убрали обработчик клика');\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n      bigImageUrl: '',\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    imageFinderApi\n      .fetchImages(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleOnImageClick = event => {\n    const { images, showModal } = this.state;\n\n    if (event.target.nodeName === 'IMG' && !showModal) {\n      const clickedImage = images.find(\n        image => image.webformatURL === event.target.src,\n      );\n\n      this.setState({ bigImageUrl: clickedImage.largeImageURL });\n\n      this.toggleModal();\n    }\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { images, isLoading, showModal, bigImageUrl } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <div>\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery images={images} />\n\n        {isLoading && (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" width={100} height={100} />\n        )}\n\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchImages} />}\n\n        {showModal && <Modal onClose={this.toggleModal} url={bigImageUrl} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}